Q: What happens when you initialize a repository? Why do you need to do it?

R: It build the .git directory and creates the initial copies of files git
needs.

Q: How is the staging area different from the working directory and the
repository? What value do you think it offers?

R: The staging area only contains files you want to commit to the repository.
It offers one a way to customize the set of files to commit rather than just
commit all the files in the working directory.

Q: How can you use the staging area to make sure you have one commit per
logical change?

R: By only staging the files related to the logical change.

Q: What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

R: Making experimental changes, new features, language changes, etc...

Q: How do the diagrams help you visualize the branch structure?

R: Diagrams give you a visual layout of the braches and the commits associated
with each branch.

Q: What is the result of merging two branches together? Why do we represent it
in the diagram the way we do?

R: It merges all the changes of two branches together and makes the parents
of the new branch the branches it was merged from.

Q: What are the pros and cons of Gitâ€™s automatic merging vs. always doing
merges manually?

R: Automatic merging is nice for simple changes that have low risk of breaking
something and save time. But for large changes and conflicts manual merging is
required.
